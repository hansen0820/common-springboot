YAML（Yet Another Markup Language）（发音 /ˈjæməl/ ）
一种基于Unicode容易阅读，容易和脚本语言交互的，用来表达资料序列的编程语言。

适应场景
脚本语言：由于实现简单，解析成本很低，YAML 特别适合在脚本语言中使用
序列化： YAML是由宿主语言数据类型直转，的比较适合做序列化。
配置文件：写 YAML 要比写 XML 快得多(无需关注标签或引号)，并且比 INI 文档功能更强。由于兼容性问题，不同语言间的数据流转建议不要用 YAML。
语言优点
YAML易于人们阅读。
YAML数据在编程语言之间是可移植的。
YAML匹配敏捷语言的本机数据结构。
YAML具有一致的模型来支持通用工具。
YAML支持单程处理。
YAML具有表现力和可扩展性。
YAML易于实现和使用。
YAML 语法
使用空格 Space 缩进表示分层，不同层次之间的缩进可以使用不同的空格数目，但是同层元素一定左对齐，即前面空格数目相同（不能使用 Tab，各个系统 Tab对应的 Space 数目可能不同，导致层次混乱）
‘#’表示注释，只能单行注释，从#开始处到行尾
破折号后面跟一个空格（a dash and space）表示列表
用冒号和空格表示键值对 key: value
简单数据（scalars，标量数据）可以不使用引号括起来，包括字符串数据。用单引号或者双引号括起来的被当作字符串数据，在单引号或双引号中使用C风格的转义字符

一：yml格式
现在大家发现，在springboot里还是要用到配置文件的。 除了使用.properties外，springboot还支持 yml格式。
个人觉得yml格式的可读性和..properties比起来差不多，有时候还没有properties 看起来那么规整。
二：同样内容，不同写法
三：application.yml 注意事项
1. 不同“等级” 用冒号隔开
2. 次等级的前面是空格，不能使用制表符(tab)
3. 冒号之后如果有值，那么冒号和值之间至少有一个空格，不能紧贴着
四：排斥性
要么用application.properties 要么用 application.yml，不要都用，否则会比较乱。